#!/usr/bin/python
import argparse

from http_request_translator.translator import process_arguments


def take_arguments():
    """Entry point for the translator. Parses arguments using `argparse` library.

    :return:`argparse` class object containing arguments passed to the translator.
    :rtype:class `argparse.Namespace`
    """
    parser = argparse.ArgumentParser(
        description="Request Translator is a standalone tool that can translate "
                    "raw HTTP requests into bash/python/php/ruby scripts")
    conflicting_group = parser.add_mutually_exclusive_group()
    request_group = parser.add_mutually_exclusive_group()
    parser.add_argument(
        '--language', '-l',
        action='append',
        help="Generates a script in language 'language' for given HTTP request. "
             "If you want to generate multiple scripts, separate the script's name with a <,>. "
             "Available languages: bash, php, python, ruby")
    parser.add_argument(
        '--proxy', '-p',
        nargs='?',
        const='127.0.0.1:8009',
        help='Generates command/script with relevant, specified proxy')
    conflicting_group.add_argument(
        '--search_string', '-ss',
        help='Sends the request and searches for the required string in the response (i.e literal match)')
    conflicting_group.add_argument(
        '--search_regex', '-se',
        help='Sends the request and searches for the required regex in the response (i.e regex match)')
    parser.add_argument(
        '--interactive', '-i',
        action='store_true',
        help="Interactive mode: read raw HTTP request from keyboard.")
    parser.add_argument(
        '--data', '-d',
        help='Add the data that you want to send along with the header.')
    parser.add_argument(
        '--template', '-t',
        help='Add the path of the custom template you want to provide.')
    request_group.add_argument(
        '--request', '-r',
        help='Input the HTTP request')
    request_group.add_argument(
        '--file', '-f',
        help='Input file for HTTP request')

    process_arguments(parser.parse_args())
    return parser.parse_args()


if __name__ == '__main__':
    take_arguments()
